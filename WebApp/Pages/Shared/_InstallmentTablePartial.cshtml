@model IEnumerable<WebApp.ViewModels.InstallmentViewModel>

@{
}

<table class="w-100 table table-hover table-responsive advanced-table">
    <thead>
        <tr>
            <th class="fw-light fs-6">
                Loan Number
            </th>
            <th class="fw-light fs-6">
                Installment Number
            </th>
            <th class="fw-light fs-6">
                Payment Number
            </th>
            <th class="fw-light fs-6">
                Date Due
            </th>
            <th class="fw-light fs-6">
                Amount
            </th>
            <th class="fw-light fs-6">
                Balance
            </th>
            <th class="fw-light fs-6">
                Borrower
            </th>
            <th class="fw-light fs-6">
                Status
            </th>
            <th class="fw-light fs-6"></th>
            <th class="fw-light fs-6"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr valign="top">
                <td>
                    <a asp-page="/Loans/Details" asp-route-ID="@item.Loan?.Id" class="text-decoration-none">@item.Loan?.LoanNumber</a>
                </td>
                <td>
                    @item.InstallmentNumber
                </td>
                <td>
                    @item.PaymentNumber
                </td>
                <td>
                    @item.DateDue.ToShortDateString()
                </td>
                <td>
                    @item.Amount.ToString("C")
                </td>
                <td>
                    @item.BalanceAfterInstallment.ToString("C")
                </td>
                <td>
                    <a asp-page="/Borrowers/Details" asp-route-ID="@item.Loan?.BorrowerId" class="text-decoration-none">@item.Loan?.BorrowerName</a>
                </td>
                @if (!item.IsOverDue && !item.IsPaid && !item.IsScrappedOff && !item.IsWrittenOff)
                {
                    <td>
                        <div class="badge badge-sm bg-warning">Running</div><br>
                    </td>
                }
                else
                {
                    if (item.IsPaid)
                    {
                        <td>
                            <div class="badge badge-sm bg-success">Paid</div>
                            <div class="badge badge-sm bg-success">@(item.PaidBy)</div>
                            @if (item.DatePaid.HasValue)
                            {
                                <div class="badge badge-sm bg-success">@(DateOnly.FromDateTime((DateTime)item.DatePaid!))</div>
                            }
                        </td>
                    }
                    else if (item.IsOverDue)
                    {
                        <td>
                            <div class="badge badge-sm bg-warning">Running</div><br>
                            <div class="badge badge-sm bg-danger">Overdue</div>
                            <div class="badge badge-sm bg-danger">@(item.DaysOverDueBy) days</div>
                            <div class="badge badge-sm bg-danger">Penalty @((item.Amount * (decimal)(item.PercentagePenaltyFeePerDayOverDue) * item.DaysOverDueBy).ToString("C"))</div>
                        </td>
                    }
                    else if (item.IsScrappedOff)
                    {
                        <td>
                            <div class="badge badge-sm bg-warning">Running</div><br>
                            <div class="badge badge-sm bg-danger">Scrapped-off</div>
                            <div class="badge badge-sm bg-danger">@((item.Amount).ToString("C"))</div>
                            @if (item.DateScrappedOff.HasValue)
                            {
                                <div class="badge badge-sm bg-danger">@(DateOnly.FromDateTime((DateTime)item.DateScrappedOff!))</div>
                            }
                        </td>
                    }
                    else if (item.IsWrittenOff)
                    {
                        <td>
                            <div class="badge badge-sm bg-danger">Written-off</div>
                            <div class="badge badge-sm bg-danger">@(item.WrittenOffBy)</div>
                            @if (item.DateWrittenOff.HasValue)
                            {
                                <div class="badge badge-sm bg-danger">@(DateOnly.FromDateTime((DateTime)item.DateWrittenOff))</div>
                            }
                        </td>
                    }
                }
                <td>
                    <a asp-page="Edit" asp-route-ID="@item.Id" class="text-decoration-none fs-6 fw-light">Manage</a>
                </td>
                <td>
                    <a asp-page="Delete" asp-route-ID="@item.Id" class="text-danger text-decoration-none fs-6 fw-light">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
